name: Tests

# Only trigger on push because PR commit messages don't point anywhere useful.
# @see {@link https://github.com/cypress-io/github-action#record-test-results-on-cypress-dashboard}
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # Cache the Next.js build outputs and update them when deps change.
      # @see {@link https://github.com/vercel/next.js/blob/master/errors/no-cache.md#github-actions}
      - uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}
      - run: yarn
      - run: yarn start:firebase &>/dev/null &
      - run: yarn build
      - uses: actions/upload-artifact@v2
        with:
          name: build
          path: .next/build
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # Automatically load balance tests across machines using Cypress.
        # @see {@link https://github.com/cypress-io/github-action#parallel}
        containers: [1, 2, 3]
    steps:
      - uses: actions/checkout@v2
      # Only run the Next.js build once for all 3 parallel test runs.
      # @see {@link https://docs.github.com/en/actions/configuring-and-managing-workflows/persisting-workflow-data-using-artifacts}
      - uses: actions/download-artifact@v2
        with:
          name: build
      # We don't have to use `actions/cache` b/c Yarn Berry already adds our
      # deps to a git-tracked `.yarn/cache` folder. This merely unpacks it.
      # @see {@link https://yarnpkg.com/features/zero-installs}
      - run: yarn
      - run: yarn start:firebase &>/dev/null &
      # This action installs and caches dependencies (including Cypress), runs
      # the build, and then runs our integration tests.
      # @see {@link https://github.com/cypress-io/github-action}
      # @see {@link https://github.com/cypress-io/github-action/pulls/195}
      - uses: tutorbookapp/github-action@master
        with:
          record: true
          parallel: true
          command: yarn test
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # Report code coverage info (from `coverage/lcov.info`) to Coveralls.
      # @see {@link https://github.com/coverallsapp/github-action}
      - uses: coverallsapp/github-action@master
        with:
          parallel: true
          flag-name: run-${{ matrix.containers }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
  coverage:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: coverallsapp/github-action@master
        with:
          parallel-finished: true
          github-token: ${{ secrets.GITHUB_TOKEN }}

env:
  INTERCOM_APP_ID: ${{ secrets.INTERCOM_APP_ID }}
  ALGOLIA_APP_ID: ${{ secrets.ALGOLIA_APP_ID }}
  ALGOLIA_SEARCH_KEY: ${{ secrets.ALGOLIA_SEARCH_KEY }}
  ALGOLIA_ADMIN_KEY: ${{ secrets.ALGOLIA_ADMIN_KEY }}
  SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
  FIRESTORE_EMULATOR_HOST: ${{ secrets.FIRESTORE_EMULATOR_HOST }}
  FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
  FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
  FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
  FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
  FIREBASE_DATABASE_URL: ${{ secrets.FIREBASE_DATABASE_URL }}
  FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
  FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
  FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}
  FIREBASE_ADMIN_CLIENT_EMAIL: ${{ secrets.FIREBASE_ADMIN_CLIENT_EMAIL }}
  FIREBASE_ADMIN_KEY: ${{ secrets.FIREBASE_ADMIN_KEY }}
